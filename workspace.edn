{:current-tab 0
 :file "tut(1).veneer"
 :manifest 
{:dependencies 
{}
 :description "This tutorial covers the basics of using Veneer and creating programs."
 :license "https://www.eclipse.org/legal/epl-v10.html"
 :name "veneer-tutorial"
 :url "https://kronoslang.io"
 :version "0.1"}
 :origin 
{:parents ["0"]
 :service "bitbucket"
 :slug "kronoslang/veneer-tutorial"}
 :tabs ("tabs/draft.initial.edn")
 :tutorial 
{:analytics "onboarding"
 :steps [{:diff :wait, :message "# Welcome to Veneer #\n\nHello! This tutorial will show you how to build programs in Veneer.\n\nFirst we cover some basic usage. Then, we are going to build a simple FM synthesizer."} {:diff {"initial" {:patch {:nodes {"7tsy4bso28hpap5" {:inputs [], :outputs [""], :parsed [:float "42"], :label "42", :pos [-186 -32]}}}}}, :message "## Our first node ##\n\nLet's create a *node*. This one will represent the constant `42`.", :mode :state, :match {:strings true}} {:diff {"initial" {:patch {:nodes {"e79qgh8dyxluch8" {:inputs [], :outputs [""], :parsed [:float "2"], :label "2", :pos [-57 -145]}}}}}, :message "... and another, this time it is `2`.", :mode :state, :match {:strings true}} {:diff {"initial" {:patch {:nodes {"vdue6p47ze8uko3" {:inputs ["a" "b"], :outputs [""], :parsed [:fn "Math:Pow" [:tuple [:free-var "a"] [:free-var "b"]]], :label "Math:Pow($a $b)", :pos [-29 17]}}}}}, :message "## Function library ##\n\nLet's add a function. This one is in the built-in library, so you can utilize editor suggestions or the library browser.", :mode :state, :match {:strings true}} {:diff {"initial" {:patch {:cables {["vdue6p47ze8uko3" 0] [:fixed "7tsy4bso28hpap5" 0], ["vdue6p47ze8uko3" 1] [:fixed "e79qgh8dyxluch8" 0]}}}}, :message "## Making connections ##\n\nData flows are indicated by virtual patch cables.\n\nPlease connect the nodes as indicated.", :mode :state, :match {:strings true}} {:diff {"initial" {:evaluators {"vdue6p47ze8uko3" :text}}}, :message "## Running programs ##\n\nWe can run the computation by *evaluating* one of the nodes in the graph.\n\nDoing this will compute `2^42`.", :mode :state, :match {:strings true}} {:diff {"initial" {:patch {:nodes {"3m423qme7drp0zf" {:inputs [], :outputs [""], :parsed [:float "5"], :label "5", :pos [-232 151]}, "2cwpqx3lvw3wou7" {:inputs ["a"], :outputs [""], :parsed [:infix [:free-var "a"] "*" [:float "10"]], :label "* 10", :pos [-80 193]}}, :cables {["2cwpqx3lvw3wou7" 0] [:fixed "3m423qme7drp0zf" 0]}}}}, :message "Let's try another little program.\n\nIn this one, we will use a *section*, which is an arithmetic operator with the left- or right-hand side built into the node.\n\nIn this case, `* 10` creates a node that multiplies its input by ten.", :mode :state, :match {:strings true}} {:diff {"initial" {:evaluators {"vdue6p47ze8uko3" :veneer.util.mapdiff/removed, "2cwpqx3lvw3wou7" :text}}}, :message "Let's run that.", :mode :state, :match {:strings true}} {:diff {"initial" {:patch {:nodes {"3m423qme7drp0zf" {:parsed [:number-widget :float "wy75ywczp6gh8yu" "12" ""]}}}}}, :message "## Live tweaking ##\n\nWhile you have the evaluator bubble open, you can interact with the program in real time by tweaking numeric constants.\n\nPlease try tweaking the indicated number by dragging.", :mode "changes", :match {:strings false}} {:diff {"3aiqdh4lnryc7g5" {:current true}}, :message "## New tab ##\n\nVeneer workspaces are organized in tabs.\n\nYou can create a new one by clicking on the `+` in the tab bar.", :mode :state, :match {:strings true}} {:diff {"3aiqdh4lnryc7g5" {:patch {:nodes {"h3k9taglz24jupw" {:inputs [], :outputs [""], :parsed [:float "60"], :label "60", :pos [-347 -24]}, "ag8f3ectjsnff6j" {:inputs ["a"], :outputs [""], :parsed [:infix [:free-var "a"] "-" [:float "69"]], :label "- 69", :pos [-223 -24]}, "5yybz53c3ix25cg" {:inputs ["a"], :outputs [""], :parsed [:infix [:free-var "a"] "/" [:float "12"]], :label "/ 12", :pos [-87 -24]}, "6ozaib7qhdhecxx" {:inputs ["b"], :outputs [""], :parsed [:fn "Math:Pow" [:tuple [:float "2"] [:free-var "b"]]], :label "Math:Pow(2 $b)", :pos [49 -24]}, "y5mduvqqus46edu" {:inputs ["a"], :outputs [""], :parsed [:infix [:free-var "a"] "*" [:float "440"]], :label "* 440", :pos [266 -24]}}, :cables {["ag8f3ectjsnff6j" 0] [:fixed "h3k9taglz24jupw" 0], ["5yybz53c3ix25cg" 0] [:fixed "ag8f3ectjsnff6j" 0], ["6ozaib7qhdhecxx" 0] [:fixed "5yybz53c3ix25cg" 0], ["y5mduvqqus46edu" 0] [:fixed "6ozaib7qhdhecxx" 0]}}}}, :message "## Pipeline entry ##\n\nOften you'll want to enter a string of nodes all connected in a cascade. Veneer has a *pipeline entry* facility for that scenario.\n\nWhenever you finalize a node by pressing `Enter`, Veneer automatically creates a tentative node downstream.\n\nThe editor focus will move to that node, so you can just keep typing.\n\nTry to insert all these nodes in one pipeline.", :mode :state, :match {:strings true}} {:diff {"3aiqdh4lnryc7g5" {:evaluators {"y5mduvqqus46edu" :text}}}, :message "By the way, this computes a frequency of a MIDI note.", :mode :state, :match {:strings true}} {:diff {"3aiqdh4lnryc7g5" {:evaluators {"y5mduvqqus46edu" :veneer.util.mapdiff/removed, "pfbaspeiner82t1" :audio}, :patch {:nodes {"pfbaspeiner82t1" {:inputs ["freq"], :outputs [""], :parsed [:fn "Gen:Tri" [:tuple [:free-var "freq"]]], :label "Gen:Tri($freq)", :pos [292 125]}}, :cables {["pfbaspeiner82t1" 0] [:fixed "y5mduvqqus46edu" 0]}}}}, :message "Let's hook that up to an oscillator to hear it.", :mode :state, :match {:strings true}} {:diff {"3aiqdh4lnryc7g5" {:patch {:nodes {"h3k9taglz24jupw" {:parsed [:number-widget :float "uykpbsnpbezknbo" "65" ""]}}}}}, :message "You can still tweak any of the numbers live.", :mode "changes", :match {:strings false}} {:diff {"initial" {:evaluators :veneer.util.mapdiff/removed}, "3aiqdh4lnryc7g5" {:evaluators :veneer.util.mapdiff/removed}}, :message "To stop playback, you can click/tap the waveform display, or press `Escape`.", :mode :state, :match {:strings true}} {:diff {"3aiqdh4lnryc7g5" {:patch {:nodes {"6qt6o4che8mmu2" {:inputs ["a"], :outputs [""], :parsed [:infix [:free-var "a"] "+" [:float "1"]], :label "+ 1", :pos [-48 139]}, "8pfknqo3p8xxv8v" :veneer.util.mapdiff/removed, "1u078cf0pghpl93" :veneer.util.mapdiff/removed, "qz9av9h5fp8cwbr" :veneer.util.mapdiff/removed, "bnsfsw727kxxa7w" {:inputs ["a" "b" "more..."], :outputs [""], :parsed [:infix [:free-var "a"] "*" [:free-var "b"] [:free-var "more..."]], :label "*", :pos [-138 139]}, "ftca8p2j1gdlr3c" :veneer.util.mapdiff/removed, "ngiadb4l4wksa26" {:inputs ["a" "b" "more..."], :outputs [""], :parsed [:infix [:free-var "a"] "*" [:free-var "b"] [:free-var "more..."]], :label "*", :pos [-352 139]}, "42p03zvdp8p292d" {:inputs ["freq"], :outputs [""], :parsed [:fn "Gen:Tri" [:tuple [:free-var "freq"]]], :label "Gen:Tri($freq)", :pos [-262 139]}, "y182z30mt8lt2sn" {:inputs ["a" "b" "more..."], :outputs [""], :parsed [:infix [:free-var "a"] "*" [:free-var "b"] [:free-var "more..."]], :label "*", :pos [76 139]}, "u4zeaa9w55uonlb" :veneer.util.mapdiff/removed}, :cables {["8pfknqo3p8xxv8v" 0] :veneer.util.mapdiff/removed, ["1u078cf0pghpl93" 0] :veneer.util.mapdiff/removed, ["u4zeaa9w55uonlb" 0] :veneer.util.mapdiff/removed, ["qz9av9h5fp8cwbr" 0] :veneer.util.mapdiff/removed, ["bnsfsw727kxxa7w" 0] [:fixed "42p03zvdp8p292d" 0], ["6qt6o4che8mmu2" 0] [:fixed "bnsfsw727kxxa7w" 0], ["y182z30mt8lt2sn" 0] [:fixed "6qt6o4che8mmu2" 0], ["42p03zvdp8p292d" 0] [:fixed "ngiadb4l4wksa26" 0]}}}}, :message "## FM Synth ##\n\nWe can turn this patch into a small FM Synth by adding a modulator pipeline.", :mode :state, :match {:strings true}} {:diff {"3aiqdh4lnryc7g5" {:patch {:nodes {"azr1y6rsii93q9" {:inputs [], :outputs [""], :parsed [:float "3"], :label "3", :pos [-408 47]}, "t826xi9dfly9qtd" {:inputs [], :outputs [""], :parsed [:float "8"], :label "8", :pos [-297 47]}}, :cables {["ngiadb4l4wksa26" 1] [:fixed "azr1y6rsii93q9" 0], ["bnsfsw727kxxa7w" 1] [:fixed "t826xi9dfly9qtd" 0]}}}}, :evaluators :stop, :message "Let's add controls for the modulator frequency multiplier and modulation index.", :mode :state, :match {:strings true}} {:diff {"3aiqdh4lnryc7g5" {:patch {:cables {["pfbaspeiner82t1" 0] [:fixed "y182z30mt8lt2sn" 0], ["y182z30mt8lt2sn" 1] [:fixed "y5mduvqqus46edu" 0], ["ngiadb4l4wksa26" 0] [:fixed "y5mduvqqus46edu" 0]}}}}, :message "and this is how we will wire it up.", :mode :state, :match {:strings true}} {:diff {"3aiqdh4lnryc7g5" {:evaluators {"pfbaspeiner82t1" :audio}}}, :message "Play ...", :mode :state, :match {:strings true}} {:diff {"3aiqdh4lnryc7g5" {:patch {:nodes {"azr1y6rsii93q9" {:parsed [:number-widget :float "3357a8rpu1o9w1m" "1" ""]}, "t826xi9dfly9qtd" {:parsed [:number-widget :float "h8d9bzbuvcivqk8" "12" ""]}}}}}, :message "... and tweak!", :mode "changes", :match {:strings false}} {:diff {"3aiqdh4lnryc7g5" {:evaluators :veneer.util.mapdiff/removed, :patch {:nodes {"8qktni91ygyq2z4" {:inputs [], :outputs ["note" "mul" "depth"], :parsed "arg", :label "(note mul depth) = arg", :pos [-443 -153]}}}}}, :message "## User functions ##\n\nLet's turn this into a reusable function. To do so, we need a *destructuring argument node*.", :mode :state, :match {:strings true}} {:diff {"3aiqdh4lnryc7g5" {:patch {:cables {["ag8f3ectjsnff6j" 0] [:fixed "8qktni91ygyq2z4" 0], ["ngiadb4l4wksa26" 1] [:fixed "8qktni91ygyq2z4" 1], ["bnsfsw727kxxa7w" 1] [:fixed "8qktni91ygyq2z4" 2]}}}}, :message "The argument node determines the inputs the function will expose to the outside world.\n\nLet's wire up the argument appropriately.", :evaluators :stop, :mode :state, :match {:strings true}} {:diff {"3aiqdh4lnryc7g5" {:identifier "Synth"}}, :message "To make the function public, it needs a name. Each tab represents a single function, and you can name it in the tab properties.", :mode :state, :match {:strings true}} {:diff {"u1o4rufyect48u" {:current true}}, :message "## Using our function ##\n\nLet's create a new tab with a small patch to test our new function.", :mode :state, :match {:strings true}} {:diff {"u1o4rufyect48u" {:patch {:nodes {"2by4ud4e23kwoxs" {:inputs ["note" "mul" "depth"], :outputs [""], :parsed [:fn "Synth" [:tuple [:free-var "note"] [:free-var "mul"] [:free-var "depth"]]], :label "Synth($note $mul $depth)", :pos [6 3]}, "7ssdb08irb44dk5" {:inputs [], :outputs [""], :parsed [:float "60"], :label "60", :pos [-224 20]}, "nn3za2l5aacunhy" {:inputs [], :outputs [""], :parsed [:float "3"], :label "3", :pos [-190 -82]}, "nl3iq6nwrtylvv6" {:inputs [], :outputs [""], :parsed [:float "0.1"], :label "0.1", :pos [-220 -155]}, "4hlzarxz6ejncoe" {:inputs ["freq"], :outputs [""], :parsed [:fn "Gen:Sin" [:tuple [:free-var "freq"]]], :label "Gen:Sin($freq)", :pos [-84 -155]}, "go4xal4g6vyshf7" {:inputs ["a"], :outputs [""], :parsed [:infix [:free-var "a"] "*" [:float "8"]], :label "* 8", :pos [40 -155]}}, :cables {["4hlzarxz6ejncoe" 0] [:fixed "nl3iq6nwrtylvv6" 0], ["go4xal4g6vyshf7" 0] [:fixed "4hlzarxz6ejncoe" 0], ["2by4ud4e23kwoxs" 2] [:fixed "go4xal4g6vyshf7" 0], ["2by4ud4e23kwoxs" 1] [:fixed "nn3za2l5aacunhy" 0], ["2by4ud4e23kwoxs" 0] [:fixed "7ssdb08irb44dk5" 0]}}}}, :message "This is what I had in mind.", :mode :state, :match {:strings true}} {:diff {"u1o4rufyect48u" {:evaluators {"2by4ud4e23kwoxs" :audio}}}, :message "Let's hear it.", :mode :state, :match {:strings true}} {:diff :wait, :message "# Thank You for Following Along! #\n\nThis is all for now. To learn more, please visit the [resources section](https://kronoslang.io/resources)."}]}
 :upd -1300485083}